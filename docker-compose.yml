version: '3.8'

services:
  jarvis-hud:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: jarvis-hud
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - jarvis-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jarvis-hud.rule=Host(`jarvis.yourdomain.com`)"
      - "traefik.http.routers.jarvis-hud.tls=true"
      - "traefik.http.routers.jarvis-hud.tls.certresolver=letsencrypt"
      - "traefik.http.services.jarvis-hud.loadbalancer.server.port=8080"

  # Future backend services (uncomment when ready)
  # jarvis-orchestrator:
  #   build: ./backend/orchestrator
  #   container_name: jarvis-orchestrator
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=${DATABASE_URL}
  #   depends_on:
  #     - redis
  #     - postgres
  #   networks:
  #     - jarvis-network

  # jarvis-voice:
  #   build: ./backend/voice
  #   container_name: jarvis-voice
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - NODE_ENV=production
  #   volumes:
  #     - ./models:/app/models
  #   networks:
  #     - jarvis-network
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

  # redis:
  #   image: redis:7-alpine
  #   container_name: jarvis-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - jarvis-network

  # postgres:
  #   image: postgres:15-alpine
  #   container_name: jarvis-postgres
  #   environment:
  #     - POSTGRES_DB=jarvis
  #     - POSTGRES_USER=jarvis
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - jarvis-network

networks:
  jarvis-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data: