version: '3.8'

services:
  jarvis-backend:
    build: 
      context: .
      dockerfile: Dockerfile.pi
    image: jarvis-backend:pi-arm64
    container_name: jarvis-backend-pi
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:/app/data/jarvis.db
      # Pi-specific optimizations
      - ENABLE_GPU_MONITORING=false
      - SYSTEM_METRICS_INTERVAL=10000
      - LOG_LEVEL=info
      - NODE_OPTIONS=--max-old-space-size=512
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config:/app/config:ro
      # Pi GPIO access (if needed)
      - /sys:/sys:ro
      - /proc/device-tree:/proc/device-tree:ro
    devices:
      - /dev/gpiomem:/dev/gpiomem
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 256M

  redis:
    image: arm64v8/redis:7-alpine
    container_name: jarvis-redis-pi
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis-pi.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    networks:
      - jarvis-network
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

  nginx:
    image: arm64v8/nginx:alpine
    container_name: jarvis-proxy-pi
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx-pi.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      # Serve frontend static files
      - ../dist:/usr/share/nginx/html:ro
    depends_on:
      - jarvis-backend
    restart: unless-stopped
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 60s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M

  # Optional: Lightweight voice processing for Pi
  jarvis-voice-lite:
    build:
      context: .
      dockerfile: Dockerfile.voice-pi
    container_name: jarvis-voice-pi
    ports:
      - "8081:8081"
    environment:
      - MODEL_PATH=/app/models
      - USE_LIGHTWEIGHT_MODELS=true
      - TTS_ENGINE=piper
    volumes:
      - ./models:/app/models
      - ./data/voice:/app/data
      # Audio device access
      - /dev/snd:/dev/snd
    privileged: true  # For audio device access
    restart: unless-stopped
    networks:
      - jarvis-network
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  jarvis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  redis_data:
    driver: local