version: '3.8'

services:
  jarvis-backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: jarvis-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:/app/data/jarvis.db
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: jarvis-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - jarvis-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: jarvis-proxy
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - jarvis-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Voice processing service (GPU enabled) - DISABLED
  # jarvis-voice:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.voice
  #   container_name: jarvis-voice
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - CUDA_VISIBLE_DEVICES=0
  #     - MODEL_PATH=/app/models
  #   volumes:
  #     - ./models:/app/models
  #     - ./data/voice:/app/data
  #   restart: unless-stopped
  #   networks:
  #     - jarvis-network
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

networks:
  jarvis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local